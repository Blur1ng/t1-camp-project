image: golang:1.23.7-bookworm

stages:
  - build
  - test
  - deploy
  - deploy_k8s

build_binary:
  stage: build
  script:
    - go build
  artifacts:
    paths:
      - pig

build_docker:
  image: docker
  stage: build
  services:
    - name: docker:dind
  script:
    - echo $DOCKER_TOKEN | docker login -u $DOCKER_USERNAME --password-stdin
    - docker build -t goapp2 .
    - docker tag goapp2 $DOCKER_USERNAME/goapp2
    - docker push $DOCKER_USERNAME/goapp2

#unit_test:
#  stage: test
#  script:
#    - go test ./...
#
#deploy:
#  image: debian:stable
#  stage: deploy
#  before_script:
#    - apt update
#    - apt install -y python3 python3-pip openssh-client
#    - pip install --break-system-packages ansible
#    - mkdir -p ~/.ssh
#    - echo "$id_rsa" > ~/.ssh/id_rsa
#    - chmod 700 ~/.ssh
#    - chmod 600 ~/.ssh/id_rsa
#  script:
#    - ansible-playbook -i inventory.ini deploy.yaml

deploy_k8s:
  stage: deploy_k8s
  image: 
    name: bitnami/kubectl:latest
    entrypoint: [""]
  before_script:
    - mkdir -p ~/.kube
    - echo "$KUBECONFIG" > ~/.kube/config

  script:
    - kubectl apply -f deployment.yaml
    - kubectl apply -f service.yaml
    - kubectl apply -f ingress.yaml